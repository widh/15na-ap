/* IRONA AP Program is subject to the terms of the Mozilla Public License 2.0.
 * You can obtain a copy of MPL at LICENSE.md of root directory. */
// csi.hpp

#include <linux/connector.h>
#include <cstdint>
#include <list>
#include <thread>
#include <tuple>
#include <mutex>
#include <cmath>

#include "15na.hpp"

#ifndef IRONA_CSI
#define IRONA_CSI

#undef CN_NETLINK_USERS
#define CN_NETLINK_USERS @CN_NETLINK_USERS@
#define CN_IDX_IWLAGN (CN_NETLINK_USERS + 0xf)
#define CN_VAL_IWLAGN 0x1

#define IRONA_PPS @IRONA_ACTUAL_PPS_APPROX@
#define IRONA_SEND @IRONA_SEND_SECONDS@
#define IRONA_SLIDE @IRONA_SLIDE_SECONDS@
#define IRONA_WINDOW @IRONA_WINDOW_SECONDS@

typedef std::tuple<unsigned short, uint8_t *> Packet;
typedef std::list<Packet> PacketList;

namespace csi
{
// Public Packet & Length Store
extern PacketList pacStore;

// Sending packet count
extern unsigned short ioWindowPkts;
extern unsigned short ioSlidePkts;

// Functions
void openSocket();
void pushPacket(unsigned short, uint8_t *);
} // namespace csi

#endif
